buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven { url "http://dl.bintray.com/stefanogualdi/plugins" }
        maven { url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineVersion}"
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:1.4"
        classpath 'org.grails.plugins:database-migration:3.0.4'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
    }
}

version "0.9"
group "releasechecklist"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.energizedwork.webdriver-binaries"
apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin: "org.sonarqube"



repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url 'http://dl.bintray.com/agorapulse/libs' }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.16.Final"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    testCompile "org.grails:grails-test-mixins:3.3.0"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-web-testing-support"
    testCompile("org.grails.plugins:geb") {
        exclude group: 'org.gebish', module: 'geb-spock'
    }
    testCompile "org.gebish:geb-spock:$gebVersion"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-api:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    compile 'org.grails.plugins:spring-security-core:3.2.3'
    compile 'org.grails.plugins:spring-security-ui:3.1.2'
    runtime 'mysql:mysql-connector-java:5.1.47'
    compile "org.grails.plugins:ckeditor:4.5.9.0"
    compile 'org.grails.plugins:database-migration:3.0.4'
    compile 'org.liquibase:liquibase-core:3.5.5'
//    compile group: 'org.docx4j', name: 'docx4j', version: '8.0.0'
    compile group: 'org.docx4j', name: 'docx4j-core', version: '8.1.0'
    compile group: 'org.docx4j', name: 'docx4j-JAXB-Internal', version: '8.1.2'
    compile group: 'org.docx4j', name: 'docx4j-ImportXHTML', version: '8.0.0'
    compile('javax.xml.bind:jaxb-api:2.3.1') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        exclude group: 'log4j', module: 'log4j'
    }

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    systemProperty "geb.env", ((System.getProperty('geb.env') ?: System.getenv('geb.env') ) ?: (System.getProperty('gebenv') ?: System.getenv('gebenv') )) ?: 'chromeHeadless'
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}

webdriverBinaries {
    chromedriver chromeDriverVersion
    geckodriver geckoDriverVersion
}

compileJava {
//raise heap
    options.fork = true
    options.forkOptions.with {
        memoryMaximumSize = '8g'
    }
}


tasks.withType(War) {
    doLast {
        exec {
            executable './release.sh'
        }
    }
}


assets {
    minifyJs = true
    minifyCss = true
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}